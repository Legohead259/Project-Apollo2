package calculators;

public class ImpactVariablesCalculator {
	static class Variables {
		/**
		 * The energy generated by the projectile's impact in Joules
		 */
		static double impactEnergy;
		
		/**
		 * The angle at which the projectile impacts in degrees
		 */
		static double impactAngle;
		
		/**
		 * The angle at which the projectile impacts in radians
		 */
		static double impactAngleR;
		
		/**
		 * The velocity at which the projectile impacts in m/s
		 */
		static double impactVelocity;
		
		/**
		 * The horizontal velocity of the projectile in m/s
		 */
		static double horizontalVelocity;
		
		/**
		 * The vertical impact velocity of the projectile in m/s
		 */
		static double verticalImpactVelocity;
		
		/**
		 * The mass of the projectile in kilograms
		 */
		static double mass;
	}
	
	
	//*****START CONSTRUCTOR*****
	
	
	/**
	 * Constructor for Apollo 2.0's impact variables calculator
	 * 
	 * @Precondition hV and vLV must be in m/s and mass must be in kilograms
	 * 
	 * @param hV the horizontal velocity of the projectile
	 * @param vLV the vertical launch velocity of the projectile
	 * @param mass the mass of the projectile
	 */
	public ImpactVariablesCalculator(double hV, double vLV, double mass) {
		Variables.horizontalVelocity = hV; Variables.verticalImpactVelocity = -vLV;
	}
	
	
	//*****END CONSTRUCTOR
	
	
	//*****START CALCULATION METHODS*****
	
	
	/**
	 * Method that calculates all of the impact variables
	 */
	public void calcAll() {
		calcImpactVelocity(); calcImpactEnergy(); calcImpactAngle(); 
	}
	
	/**
	 * Method that calculates the velocity at which the projectile impacts
	 */
	void calcImpactVelocity() {
		double vIVSqrd = Math.pow(Variables.verticalImpactVelocity, 2);
		double hVSqrd = Math.pow(Variables.horizontalVelocity, 2);
		
		Variables.impactVelocity = Math.sqrt(vIVSqrd + hVSqrd);
	}
	
	/**
	 * Method that calculates how much energy is generated by the projectile's impact
	 */
	void calcImpactEnergy() {
		double iVSqrd = Math.pow(Variables.impactVelocity, 2);
		
		Variables.impactEnergy = .5 * Variables.mass * iVSqrd;
	}
	
	/**
	 * Method that calculates the angle at which the projectile impacts
	 */
	void calcImpactAngle() {
		Variables.impactAngleR = Math.atan(Variables.verticalImpactVelocity / Variables.horizontalVelocity);
		Variables.impactAngle = Math.toDegrees(Variables.impactAngleR);
	}
	
	
	//*****END CALCULATION METHODS*****
	
	
	//*****START GETTERS*****
	
	/**
	 * @return the impactEnergy of the projectile in Joules
	 */
	public static double getImpactEnergy() {
		return Variables.impactEnergy;
	}

	/**
	 * @return the impactAngle of the projectile in degrees
	 */
	public static double getImpactAngle() {
		return Variables.impactAngle;
	}

	/**
	 * @return the impactVelocity of the projectile in m/s
	 */
	public static double getImpactVelocity() {
		return Variables.impactVelocity;
	}
	
	
	//*****END GETTERS*****
}
